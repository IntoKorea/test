# Ex01-01_basic.py


# Python
# - 소스 코드를 읽고 바로 실행하는 인터프리터 방식의 프로그램 입니다.
# cf) JS도 인터프리터 방식(한줄한줄 바로 실행)


# python주석

'''
여러줄 주석
외따옴표(')를 세 번 사용하면 여러줄 주석을 선언할 수 있다.
'''


"""
여러줄 주석
쌍따옴표(")를 세 번 사용해도 여러줄 주석을 선언할 수 있다.
"""


# print()
# - 출력함수 입니다.(자동으로 줄바꿈해줌)
# - 터미널에 문자열, 정수 ... 등의 다양한 데이터를 출력해줍니다.
# - 여러개의 데이터를 출력할 때에는 ','(쉼표)를 사용합니다. // 이때 쉼표는 출력x.

print("start 파이썬")
print(10)
print("python", 100, 12.3)
print('오늘도 즐거운 하루되세요~')



# Escape 문자
# \n : 라인변경
# \r : 해당 라인의 처음으로 커서 이동
# \' : 외따옴표 기호 출력
# \" : 쌍따옴표 기호 출력

print("12345\n6789")
print("12345\r6789") # 결과:67895. 백슬래시r 하면 커서가 맨앞으로 점프, 그리고 덮어씀..따라서 1234가 사라짐.
print('외따옴표 \' ')
print('쌍따옴표 \" ')

print()


"""
print option
- print( 데이터, 데이터 ..., sep=값 )
  쉼표 위치에 sep 값이 적용되어 출력됩니다.(쉼표자리에 sep에 적용한 값이 들어감.)
"""
# 참고) 쉼표 위치에 공백 생김. ','값 바꾸는 것 sep의 default값은 띄어쓰기임.
print("루피", "초파", "나미")
print("루피", "초파", "나미", sep=' ') # 위에랑 결과 같음.
print("루피", "초파", "나미", sep='\n')
print("루피", "초파", "나미", sep='-')

print()





"""
python에서 print() 함수를 사용해서 데이터를 출력하면,
마지막에 강제로 라인변경을 발생시켜 무조건 한줄이 내려갑니다.
줄바꿈을 원하지 않을 때는 end=''를 추가해주면 됩니다.
"""
print("I am ", end='')
print("your ", end='')
print("father ", end='')

print()
